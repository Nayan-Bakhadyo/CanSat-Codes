{\rtf1\ansi\ansicpg1252\cocoartf2638
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;\red199\green200\blue201;\red26\green28\blue31;}
{\*\expandedcolortbl;;\cssrgb\c81961\c82353\c82745;\cssrgb\c13333\c14510\c16078;}
\margl1440\margr1440\vieww11520\viewh8400\viewkind0
\deftab720
\pard\pardeftab720\partightenfactor0

\f0\fs30 \cf2 \cb3 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 //Including libraries\
#include <Wire.h>\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0 // I2C Library\
#include <QMC5883LCompass.h> // QMC5883L GY271 Compass Library\
#include <MPU6050_tockn.h>\'a0\'a0 // MPU6050 Library\
#include <Adafruit_BMP085.h> // BMP180 Library\
#include "DHT.h"\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0 // DHT sensor Library\
#include <ESP8266WiFi.h>\'a0\'a0\'a0\'a0 // ESP wifi\
#include <ESPAsyncWebServer.h>\
#include <WebSerial.h>\'a0\'a0\'a0\'a0\'a0\'a0 //we WebSerial print\
//definations and varibles\
//ESP wifi\
const char *WIFI_SSID = "Cansat_host";\
const char *WIFI_PASSWORD = "workshopcansat";\
//\
//const char *WIFI_SSID = "test";\
//const char *WIFI_PASSWORD = "hellosatellite";\
AsyncWebServer server(80);\
void callback(unsigned char* data, unsigned int length)\
\{\
\'a0\'a0data[length] = '\\0';\
\'a0\'a0WebSerial.println((char*) data);\
\}\
//DHT\
#define DHTTYPE DHT11\'a0\'a0 // DHT 11\
#define dht_dpin 10\
DHT dht(dht_dpin, DHTTYPE);\
//BMP180\
#define seaLevelPressure_hPa 1013.25\
Adafruit_BMP085 bmp;\
//MPU_6050\
MPU6050 mpu6050(Wire);\
long timer = 0;\
//Compass\
QMC5883LCompass compass;\
void setup() \{\
\'a0\'a0//\'a0 pinMode(A0, OUTPUT);\
\'a0\'a0pinMode(15, OUTPUT);\
\'a0\'a0// Initialize the WebSerial port.\
\'a0\'a0Serial.begin(115200); //initialize WebSerial monitor\
\'a0\'a0// Initialize I2C.\
\'a0\'a0Wire.begin();\
\'a0\'a0dht.begin(); //Initializing DHT11\
\'a0\'a0if (!bmp.begin()) \{ //Initializing BMP180\
\'a0\'a0\'a0\'a0Serial.println("Could not find a valid BMP085 sensor, check wiring!");\
\'a0\'a0\'a0\'a0while (1) \{\}\
\'a0\'a0\}\
\'a0\'a0mpu6050.begin();\'a0\'a0 //Initializing MPU\
\'a0\'a0mpu6050.calcGyroOffsets(true);\
\'a0\'a0compass.init();\'a0\'a0\'a0 //Initializing Magnetomete\
\'a0\'a0//connect to wifi\
\'a0\'a0WiFi.begin(WIFI_SSID, WIFI_PASSWORD);\
\'a0\'a0while (WiFi.status() != WL_CONNECTED) \{\
\'a0\'a0\'a0\'a0delay(500);\
\'a0\'a0\'a0\'a0Serial.print(".");\
\'a0\'a0\}\
\'a0\'a0Serial.println(WiFi.localIP());\
\'a0\'a0WebSerial.begin(&server);\
\'a0\'a0WebSerial.msgCallback(callback);\
\'a0\'a0server.begin();\
\}\
void loop() \{\
\'a0\'a0//\'a0 digitalWrite(A0, 1);\
\'a0\'a0digitalWrite(15, 1);\
\'a0\'a0//read DHt\
\'a0\'a0int dht_humi = dht.readHumidity();\
\'a0\'a0int dht_temp = dht.readTemperature();\
\'a0\'a0//read BMP\
\'a0\'a0int bmp_temp =\'a0 bmp.readTemperature();\
\'a0\'a0int\'a0\'a0 pressure = bmp.readPressure();\
\'a0\'a0float my_altitude = bmp.readAltitude();\
\'a0\'a0int32_t pressure_at_sealevel = bmp.readSealevelPressure();\
\'a0\'a0int\'a0 real_altitude = bmp.readAltitude(seaLevelPressure_hPa * 100);\
\'a0\'a0//read MPU6050\
\'a0\'a0float mpu_temp, accX, accY, accZ, gyroX, gyroY, gyroZ, angleX, angleY, angleZ;\
\'a0\'a0String test;\
\'a0\'a0mpu6050.update();\
\pard\pardeftab720\partightenfactor0
\cf2 \
\pard\pardeftab720\partightenfactor0
\cf2 \'a0\'a0// Read compass values\
\'a0\'a0compass.read();\
\'a0\'a0mpu_temp = mpu6050.getTemp();\
\'a0\'a0accX = mpu6050.getAccX();\
\'a0\'a0accY = mpu6050.getAccY();\
\'a0\'a0accZ = mpu6050.getAccZ() * 10;\
\'a0\'a0gyroX = mpu6050.getGyroX();\
\'a0\'a0gyroY = mpu6050.getGyroY();\
\'a0\'a0gyroZ = mpu6050.getGyroZ();\
\'a0\'a0angleX = mpu6050.getAngleX();\
\'a0\'a0angleY = mpu6050.getAngleY();\
\'a0\'a0angleZ = mpu6050.getAngleZ();\
\'a0\'a0//read compass\
\'a0\'a0int x = 0, y = 0, z = 0, az = 0;\
\'a0\'a0x = compass.getX();\
\'a0\'a0y = compass.getY();\
\'a0\'a0z = compass.getZ();\
\'a0\'a0az = compass.getAzimuth();\
\'a0\'a0String set = "\\n ";\
\'a0\'a0set = "\\n"+ String(dht_temp) + ", " + String(dht_humi) + ", " + String(pressure) + ", " + String(real_altitude) + ", " + String(accX) + ", " + String(accY) + ", " + String(accZ) + ", " + String(gyroX) + ", " + String(gyroY) + ", " + String(gyroZ) + ", " + String(angleX) + ", " + String(angleY) + ", " + String(angleZ);\
\'a0\'a0if (az != 0)\{set += ", " + String(az);\}\
\'a0\'a0WebSerial.print(set);\
\}}